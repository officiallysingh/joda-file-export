package com.zcompany.example.domain.model;

import java.time.ZonedDateTime;
import java.util.Map;
import java.util.NoSuchElementException;

import org.joda.beans.Bean;
import org.joda.beans.ImmutableBean;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaBean;
import org.joda.beans.MetaProperty;
import org.joda.beans.gen.BeanDefinition;
import org.joda.beans.gen.PropertyDefinition;
import org.joda.beans.impl.direct.DirectFieldsBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaBean;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

import com.xebia.util.export.annotation.Export;

import lombok.AllArgsConstructor;
import lombok.Getter;

@AllArgsConstructor(staticName = "of")
@BeanDefinition
public class InterBankRate implements ImmutableBean {

    @Getter
    private String id;

    @PropertyDefinition
    private final Exchange exchange;

    @Export(columnName = "Agent", contexts = "agent_specific")
    @PropertyDefinition
    private final String agent;

    @Export(columnName = "Bank", contexts = "bank_specific")
    @PropertyDefinition
    private final String bank;

    @Export(columnName = "Updated On")
    @PropertyDefinition
    private final ZonedDateTime updatedOn;

    @Export(columnName = "Status")
    @PropertyDefinition
    private final Boolean status;

    //------------------------- AUTOGENERATED START -------------------------
    /**
     * The meta-bean for {@code InterBankRate}.
     * @return the meta-bean, not null
     */
    public static InterBankRate.Meta meta() {
        return InterBankRate.Meta.INSTANCE;
    }

    static {
        MetaBean.register(InterBankRate.Meta.INSTANCE);
    }

    /**
     * Returns a builder used to create an instance of the bean.
     * @return the builder, not null
     */
    public static InterBankRate.Builder builder() {
        return new InterBankRate.Builder();
    }

    /**
     * Restricted constructor.
     * @param builder  the builder to copy from, not null
     */
    protected InterBankRate(InterBankRate.Builder builder) {
        this.exchange = builder.exchange;
        this.agent = builder.agent;
        this.bank = builder.bank;
        this.updatedOn = builder.updatedOn;
        this.status = builder.status;
    }

    @Override
    public InterBankRate.Meta metaBean() {
        return InterBankRate.Meta.INSTANCE;
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the exchange.
     * @return the value of the property
     */
    public Exchange getExchange() {
        return exchange;
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the agent.
     * @return the value of the property
     */
    public String getAgent() {
        return agent;
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the bank.
     * @return the value of the property
     */
    public String getBank() {
        return bank;
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the updatedOn.
     * @return the value of the property
     */
    public ZonedDateTime getUpdatedOn() {
        return updatedOn;
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the status.
     * @return the value of the property
     */
    public Boolean getStatus() {
        return status;
    }

    //-----------------------------------------------------------------------
    /**
     * Returns a builder that allows this bean to be mutated.
     * @return the mutable builder, not null
     */
    public Builder toBuilder() {
        return new Builder(this);
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (obj != null && obj.getClass() == this.getClass()) {
            InterBankRate other = (InterBankRate) obj;
            return JodaBeanUtils.equal(exchange, other.exchange) &&
                    JodaBeanUtils.equal(agent, other.agent) &&
                    JodaBeanUtils.equal(bank, other.bank) &&
                    JodaBeanUtils.equal(updatedOn, other.updatedOn) &&
                    JodaBeanUtils.equal(status, other.status);
        }
        return false;
    }

    @Override
    public int hashCode() {
        int hash = getClass().hashCode();
        hash = hash * 31 + JodaBeanUtils.hashCode(exchange);
        hash = hash * 31 + JodaBeanUtils.hashCode(agent);
        hash = hash * 31 + JodaBeanUtils.hashCode(bank);
        hash = hash * 31 + JodaBeanUtils.hashCode(updatedOn);
        hash = hash * 31 + JodaBeanUtils.hashCode(status);
        return hash;
    }

    @Override
    public String toString() {
        StringBuilder buf = new StringBuilder(192);
        buf.append("InterBankRate{");
        int len = buf.length();
        toString(buf);
        if (buf.length() > len) {
            buf.setLength(buf.length() - 2);
        }
        buf.append('}');
        return buf.toString();
    }

    protected void toString(StringBuilder buf) {
        buf.append("exchange").append('=').append(JodaBeanUtils.toString(exchange)).append(',').append(' ');
        buf.append("agent").append('=').append(JodaBeanUtils.toString(agent)).append(',').append(' ');
        buf.append("bank").append('=').append(JodaBeanUtils.toString(bank)).append(',').append(' ');
        buf.append("updatedOn").append('=').append(JodaBeanUtils.toString(updatedOn)).append(',').append(' ');
        buf.append("status").append('=').append(JodaBeanUtils.toString(status)).append(',').append(' ');
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-bean for {@code InterBankRate}.
     */
    public static class Meta extends DirectMetaBean {
        /**
         * The singleton instance of the meta-bean.
         */
        static final Meta INSTANCE = new Meta();

        /**
         * The meta-property for the {@code exchange} property.
         */
        private final MetaProperty<Exchange> exchange = DirectMetaProperty.ofImmutable(
                this, "exchange", InterBankRate.class, Exchange.class);
        /**
         * The meta-property for the {@code agent} property.
         */
        private final MetaProperty<String> agent = DirectMetaProperty.ofImmutable(
                this, "agent", InterBankRate.class, String.class);
        /**
         * The meta-property for the {@code bank} property.
         */
        private final MetaProperty<String> bank = DirectMetaProperty.ofImmutable(
                this, "bank", InterBankRate.class, String.class);
        /**
         * The meta-property for the {@code updatedOn} property.
         */
        private final MetaProperty<ZonedDateTime> updatedOn = DirectMetaProperty.ofImmutable(
                this, "updatedOn", InterBankRate.class, ZonedDateTime.class);
        /**
         * The meta-property for the {@code status} property.
         */
        private final MetaProperty<Boolean> status = DirectMetaProperty.ofImmutable(
                this, "status", InterBankRate.class, Boolean.class);
        /**
         * The meta-properties.
         */
        private final Map<String, MetaProperty<?>> metaPropertyMap$ = new DirectMetaPropertyMap(
                this, null,
                "exchange",
                "agent",
                "bank",
                "updatedOn",
                "status");

        /**
         * Restricted constructor.
         */
        protected Meta() {
        }

        @Override
        protected MetaProperty<?> metaPropertyGet(String propertyName) {
            switch (propertyName.hashCode()) {
                case 1989774883:  // exchange
                    return exchange;
                case 92750597:  // agent
                    return agent;
                case 3016252:  // bank
                    return bank;
                case -1949194246:  // updatedOn
                    return updatedOn;
                case -892481550:  // status
                    return status;
            }
            return super.metaPropertyGet(propertyName);
        }

        @Override
        public InterBankRate.Builder builder() {
            return new InterBankRate.Builder();
        }

        @Override
        public Class<? extends InterBankRate> beanType() {
            return InterBankRate.class;
        }

        @Override
        public Map<String, MetaProperty<?>> metaPropertyMap() {
            return metaPropertyMap$;
        }

        //-----------------------------------------------------------------------
        /**
         * The meta-property for the {@code exchange} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Exchange> exchange() {
            return exchange;
        }

        /**
         * The meta-property for the {@code agent} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> agent() {
            return agent;
        }

        /**
         * The meta-property for the {@code bank} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> bank() {
            return bank;
        }

        /**
         * The meta-property for the {@code updatedOn} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<ZonedDateTime> updatedOn() {
            return updatedOn;
        }

        /**
         * The meta-property for the {@code status} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Boolean> status() {
            return status;
        }

        //-----------------------------------------------------------------------
        @Override
        protected Object propertyGet(Bean bean, String propertyName, boolean quiet) {
            switch (propertyName.hashCode()) {
                case 1989774883:  // exchange
                    return ((InterBankRate) bean).getExchange();
                case 92750597:  // agent
                    return ((InterBankRate) bean).getAgent();
                case 3016252:  // bank
                    return ((InterBankRate) bean).getBank();
                case -1949194246:  // updatedOn
                    return ((InterBankRate) bean).getUpdatedOn();
                case -892481550:  // status
                    return ((InterBankRate) bean).getStatus();
            }
            return super.propertyGet(bean, propertyName, quiet);
        }

        @Override
        protected void propertySet(Bean bean, String propertyName, Object newValue, boolean quiet) {
            metaProperty(propertyName);
            if (quiet) {
                return;
            }
            throw new UnsupportedOperationException("Property cannot be written: " + propertyName);
        }

    }

    //-----------------------------------------------------------------------
    /**
     * The bean-builder for {@code InterBankRate}.
     */
    public static class Builder extends DirectFieldsBeanBuilder<InterBankRate> {

        private Exchange exchange;
        private String agent;
        private String bank;
        private ZonedDateTime updatedOn;
        private Boolean status;

        /**
         * Restricted constructor.
         */
        protected Builder() {
        }

        /**
         * Restricted copy constructor.
         * @param beanToCopy  the bean to copy from, not null
         */
        protected Builder(InterBankRate beanToCopy) {
            this.exchange = beanToCopy.getExchange();
            this.agent = beanToCopy.getAgent();
            this.bank = beanToCopy.getBank();
            this.updatedOn = beanToCopy.getUpdatedOn();
            this.status = beanToCopy.getStatus();
        }

        //-----------------------------------------------------------------------
        @Override
        public Object get(String propertyName) {
            switch (propertyName.hashCode()) {
                case 1989774883:  // exchange
                    return exchange;
                case 92750597:  // agent
                    return agent;
                case 3016252:  // bank
                    return bank;
                case -1949194246:  // updatedOn
                    return updatedOn;
                case -892481550:  // status
                    return status;
                default:
                    throw new NoSuchElementException("Unknown property: " + propertyName);
            }
        }

        @Override
        public Builder set(String propertyName, Object newValue) {
            switch (propertyName.hashCode()) {
                case 1989774883:  // exchange
                    this.exchange = (Exchange) newValue;
                    break;
                case 92750597:  // agent
                    this.agent = (String) newValue;
                    break;
                case 3016252:  // bank
                    this.bank = (String) newValue;
                    break;
                case -1949194246:  // updatedOn
                    this.updatedOn = (ZonedDateTime) newValue;
                    break;
                case -892481550:  // status
                    this.status = (Boolean) newValue;
                    break;
                default:
                    throw new NoSuchElementException("Unknown property: " + propertyName);
            }
            return this;
        }

        @Override
        public Builder set(MetaProperty<?> property, Object value) {
            super.set(property, value);
            return this;
        }

        @Override
        public InterBankRate build() {
            return new InterBankRate(this);
        }

        //-----------------------------------------------------------------------
        /**
         * Sets the exchange.
         * @param exchange  the new value
         * @return this, for chaining, not null
         */
        public Builder exchange(Exchange exchange) {
            this.exchange = exchange;
            return this;
        }

        /**
         * Sets the agent.
         * @param agent  the new value
         * @return this, for chaining, not null
         */
        public Builder agent(String agent) {
            this.agent = agent;
            return this;
        }

        /**
         * Sets the bank.
         * @param bank  the new value
         * @return this, for chaining, not null
         */
        public Builder bank(String bank) {
            this.bank = bank;
            return this;
        }

        /**
         * Sets the updatedOn.
         * @param updatedOn  the new value
         * @return this, for chaining, not null
         */
        public Builder updatedOn(ZonedDateTime updatedOn) {
            this.updatedOn = updatedOn;
            return this;
        }

        /**
         * Sets the status.
         * @param status  the new value
         * @return this, for chaining, not null
         */
        public Builder status(Boolean status) {
            this.status = status;
            return this;
        }

        //-----------------------------------------------------------------------
        @Override
        public String toString() {
            StringBuilder buf = new StringBuilder(192);
            buf.append("InterBankRate.Builder{");
            int len = buf.length();
            toString(buf);
            if (buf.length() > len) {
                buf.setLength(buf.length() - 2);
            }
            buf.append('}');
            return buf.toString();
        }

        protected void toString(StringBuilder buf) {
            buf.append("exchange").append('=').append(JodaBeanUtils.toString(exchange)).append(',').append(' ');
            buf.append("agent").append('=').append(JodaBeanUtils.toString(agent)).append(',').append(' ');
            buf.append("bank").append('=').append(JodaBeanUtils.toString(bank)).append(',').append(' ');
            buf.append("updatedOn").append('=').append(JodaBeanUtils.toString(updatedOn)).append(',').append(' ');
            buf.append("status").append('=').append(JodaBeanUtils.toString(status)).append(',').append(' ');
        }

    }

    //-------------------------- AUTOGENERATED END --------------------------
}
